{"version":3,"sources":["reducers/login.js","reducers/user.js","reducers/users.js","reducers/index.js","components/success/success.js","helpers/helpers.js","api/api-heroku.js","components/forms/sing-up.js","components/title/title.js","pages/sing-up.js","components/forms/sing-in.js","pages/sing-in.js","components/my-profile/my-profile.js","actions/users.js","actions/user.js","pages/my-profile.js","components/app-container/app-container.js","shields/shields.js","App.js","serviceWorker.js","index.js"],"names":["reducerLogin","state","action","type","payload","reducerUser","reducerUsers","combineReducers","login","user","users","Success","props","text","className","width","height","viewBox","fill","xmlns","d","stroke","orig-stroke","strokeWidth","orig-stroke-width","animation-delay-opacity","animation-delay-stroke","animation-delay-fill","animation-duration-opacity","animation-duration-stroke","animation-duration-fill","validateRegex","regex","value","test","checkValueLength","min","max","length","converterFormDataToJson","formData","objectData","Object","fromEntries","JSON","stringify","Method","api","_fetchRequest","a","url","method","body","headersAppend","headers","Headers","append","entries","key","fetch","_baseUrl","response","ok","json","alert","status","this","jsonData","id","FormSingUp","validateForm","username","first_name","last_name","password","isValidPassword","Boolean","handleChangeUsername","evt","target","setState","isValidForm","handleChangeFirstName","trim","handleChangeLastName","handleChangePassword","handleClickToggle","isTypeInputText","handleSubmit","preventDefault","history","FormData","createUser","then","data","showSuccess","setTimeout","push","initialState","localStorage","getItem","to","Fragment","onSubmit","name","required","minLength","maxLength","onChange","pattern","htmlFor","onClick","disabled","Component","withRouter","Title","title","isShowDesc","PageSingUp","FormSingIn","getTokenAndAuth","setItem","token","PageSingIn","MyProfile","updateUser","isDisableForm","handleClickEdit","handleClickExit","removeItem","is_active","Authorization","getAllUsers","getAllUsersDispatch","storage","index","findIndex","item","toLowerCase","searchUser","getUserInfoDispatch","assign","connect","dispatch","PageMyProfile","pathname","location","classApp","children","PrivatePage","ProtectPage","App","basename","path","match","CSSTransition","in","timeout","classNames","unmountOnExit","exact","window","hostname","middlewareEnhancer","applyMiddleware","thunkMiddleware","composedEnhancer","compose","store","createStore","rootReducer","undefined","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"ycASeA,EATM,WAA0B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAC1C,OAAQA,EAAOC,MACX,IAAK,YACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICIJI,EATK,WAA0B,IAAzBJ,EAAwB,uDAAhB,GAAIC,EAAY,uCACzC,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICIJK,EATM,WAA0B,IAAzBL,EAAwB,uDAAhB,GAAIC,EAAY,uCAC1C,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICAJM,cAAgB,CAC3BC,QACAC,OACAC,U,6DCLSC,G,YAAU,SAACC,GAAW,IACvBC,EAASD,EAATC,KACR,OACI,yBAAKC,UAAW,WACZ,yBACIA,UAAW,eACXC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,KAAK,OACLC,MAAM,8BAEN,0BACIL,UAAW,gBACXM,EAAE,ioBACFF,KAAK,QACLG,OAAO,QACPC,cAAY,QACZC,YAAa,EACbC,oBAAmB,EACnBC,0BAAyB,EACzBC,yBAAwB,IACxBC,uBAAsB,KACtBC,6BAA4B,IAC5BC,4BAA2B,IAC3BC,0BAAyB,OAGjC,uBAAGhB,UAAW,iBAAd,gBAAmCD,MCzBlCkB,EAAgB,SAACC,EAAOC,GACjC,OAAOD,EAAME,KAAKD,IASTE,EAAmB,SAACF,EAAOG,EAAKC,GACzC,IAAMC,EAASL,EAAMK,OACrB,OAAQA,GAAUF,GAASE,GAAUD,GAO5BE,EAA0B,SAACC,GACpC,IAAMC,EAAaC,OAAOC,YAAYH,GACtC,OAAOI,KAAKC,UAAUJ,I,iCC3BpBK,EACE,MADFA,EAEG,OAFHA,EAII,QAmDGC,EAAM,I,WA9Cf,aAAe,IAAD,gCAIdC,cAJc,uCAIE,uDAAAC,EAAA,sDAUZ,GATAC,EADY,EACZA,IADY,IAEZC,cAFY,MAEHL,EAFG,MAGZM,YAHY,MAGL,KAHK,MAIZC,qBAJY,MAII,KAJJ,GAONC,EAAU,IAAIC,SACZC,OAAO,eAAgB,oBAE3BH,EACA,UAA2BX,OAAOe,QAAQJ,GAA1C,eAA2D,EAAD,oBAA9CK,EAA8C,KAAzCzB,EAAyC,KACtDqB,EAAQE,OAAR,UAAkBE,GAAlB,UAA4BzB,IAZxB,gBAgBW0B,MAAM,GAAD,OAAI,EAAKC,SAAT,YAAqBV,GAAO,CAAEC,SAAQC,OAAME,YAhB5D,YAgBNO,EAhBM,QAkBCC,GAlBD,kCAmBKD,EAASE,OAnBd,iDAqBRC,MAAM,yCAAaH,EAASI,QArBpB,4CAJF,sDACVC,KAAKN,SAAW,iD,4DA4BJO,GACZ,OAAOD,KAAKlB,cAAc,CAAEE,IAAK,kBAAmBC,OAAQL,EAAaM,KAAMe,M,kCAGvEd,GACR,OAAOa,KAAKlB,cAAc,CAAEE,IAAK,gBAAiBG,oB,iCAG3Cc,EAAUd,GACjB,OAAOa,KAAKlB,cAAc,CAAEE,IAAK,gBAAiBC,OAAQL,EAAaM,KAAMe,EAAUd,oB,iCAGhFc,EAAUC,EAAIf,GACrB,OAAOa,KAAKlB,cAAc,CAAEE,IAAI,gBAAD,OAAkBkB,EAAlB,KAAyBjB,OAAQL,EAAcM,KAAMe,EAAUd,sB,MC5ChGgB,E,kDACF,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAgBV0D,aAAe,SAACrE,GAAW,IACfsE,EAA+DtE,EAA/DsE,SAAUC,EAAqDvE,EAArDuE,WAAYC,EAAyCxE,EAAzCwE,UAAWC,EAA8BzE,EAA9ByE,SAAUC,EAAoB1E,EAApB0E,gBAEnD,OAAOC,QACHzC,EAAiBoC,EAAU,EAAG,MAC9BpC,EAAiBqC,EAAY,EAAG,KAChCrC,EAAiBsC,EAAW,EAAG,MAC/BtC,EAAiBuC,EAAU,EAAG,MAC9BC,IAzBW,EA6BnBE,qBAAuB,SAACC,GACpB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MACzB,EAAK+C,UAAS,SAAC/E,GAAD,MAAY,CACtBsE,SAAUtC,EACVgD,YAAa,EAAKX,aAAL,2BAAuBrE,GAAvB,IAA8BsE,SAAUtC,UAjC1C,EAqCnBiD,sBAAwB,SAACJ,GACrB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAC/B,EAAKH,UAAS,SAAC/E,GAAD,MAAY,CACtBuE,WAAYvC,EACZgD,YAAa,EAAKX,aAAL,2BAAuBrE,GAAvB,IAA8BuE,WAAYvC,UAzC5C,EA6CnBmD,qBAAuB,SAACN,GACpB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAE/B,EAAKH,UAAS,SAAC/E,GAAD,MAAY,CACtBwE,UAAWxC,EACXgD,YAAa,EAAKX,aAAL,2BACNrE,GADM,IAETwE,UAAWxC,UApDJ,EAyDnBoD,qBAAuB,SAACP,GACpB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAEzBR,EAAkB5C,EADN,6BAC+BE,GAEjD,EAAK+C,UAAS,SAAC/E,GAAD,MAAY,CACtByE,SAAUzC,EACV0C,gBAAiBA,EACjBM,YAAa,EAAKX,aAAL,2BACNrE,GADM,IAETyE,SAAUzC,EACV0C,gBAAiBA,UApEV,EAyEnBW,kBAAoB,WAChB,EAAKN,UAAS,SAAC/E,GAAD,MAAY,CAACsF,iBAAkBtF,EAAMsF,qBA1EpC,EA6EnBC,aAAe,SAACV,GACZA,EAAIW,iBADgB,IAEZC,EAAY,EAAK9E,MAAjB8E,QAEFlD,EAAW,IAAImD,SAASb,EAAIC,QAClCvC,EAASgB,OAAO,YAAa,QAC7B,IAAMW,EAAW5B,EAAwBC,GAOzCO,EAAI6C,WAAWzB,EALO,CAClB,OAAU,mBACV,cAAiB,mDAIhB0B,MAAK,SAACC,GACCA,EAAK1B,KACL,EAAKY,SAAS,CAACe,aAAa,IAC5BC,YAAW,WACPN,EAAQO,KAAK,cACd,WA7Ff,EAAKC,aAAe,CAChB3B,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVO,aAAa,EACbM,iBAAiB,EACjBZ,iBAAiB,EACjBoB,aAAa,GAGjB,EAAK9F,MAAQ,EAAKiG,aAdH,E,qDAsGf,OAAIC,aAAaC,QAAQ,SACd,kBAAC,IAAD,CAAUC,GAAG,MAIpB,kBAAC,IAAMC,SAAP,KACI,0BAAMxF,UAAW,OACXyF,SAAUrC,KAAKsB,cACjB,yBAAK1E,UAAW,eACZ,2BAAOA,UAAW,cAAeX,KAAM,OAAQqG,KAAM,WAAYpC,GAAI,WAAYqC,UAAQ,EAACC,UAAW,EAAGC,UAAW,IAC5G1E,MAAOiC,KAAKjE,MAAMsE,SAClBqC,SAAU1C,KAAKW,qBACfgC,QAAS,iBAChB,2BAAO/F,UAAW,oCAAqCgG,QAAS,YAAhE,mCAEJ,yBAAKhG,UAAW,eACZ,2BAAOA,UAAW,cAAeX,KAAM,OAAQqG,KAAM,aAAcpC,GAAI,aAAcqC,UAAQ,EAACE,UAAW,GAClG1E,MAAOiC,KAAKjE,MAAMuE,WAClBoC,SAAU1C,KAAKgB,wBACtB,2BAAOpE,UAAW,oCAAqCgG,QAAS,cAAhE,uBAEJ,yBAAKhG,UAAW,eACZ,2BAAOA,UAAW,cAAeX,KAAM,OAAQqG,KAAM,YAAapC,GAAI,YAAaqC,UAAQ,EAACE,UAAW,IAChG1E,MAAOiC,KAAKjE,MAAMwE,UAClBmC,SAAU1C,KAAKkB,uBAEtB,2BAAOtE,UAAW,oCAAqCgG,QAAS,aAAhE,+CAEJ,yBAAKhG,UAAW,eACZ,2BAAOA,UAAW,cAAe0F,KAAM,WAAYpC,GAAI,WAAYqC,UAAQ,EAACC,UAAW,EAAGC,UAAW,IAC9FxG,KAAM+D,KAAKjE,MAAMsF,gBAAkB,OAAS,WAC5CtD,MAAOiC,KAAKjE,MAAMyE,SAClBkC,SAAU1C,KAAKmB,qBACfwB,QAAS,gCAEhB,2BAAO/F,UAAW,oCAAqCgG,QAAS,YAAhE,wCACA,4BAAQhG,UAAW,0BAA2BX,KAAM,SAC5C4G,QAAS7C,KAAKoB,mBAClB,yBAAKxE,UAAWoD,KAAKjE,MAAMsF,gBAAkB,cAAgB,MAAQxE,MAAO,GAAIC,OAAQ,GAAIC,QAAQ,YAAYC,KAAK,QACjH,0BACIE,EAAE,gEAEN,0BACIA,EAAE,kEAGV,0BAAMN,UAAW,mBAAjB,+JAGR,yBAAKA,UAAW,eACZ,4BAAQA,UAAW,gBAAiBX,KAAM,SAAU6G,UAAW9C,KAAKjE,MAAMgF,aAA1E,kHAEJ,yBAAKnE,UAAW,wCACZ,0BAAMA,UAAW,kBAAjB,wEACA,kBAAC,IAAD,CAAMA,UAAW,aAAcuF,GAAG,YAAlC,oCAIJnC,KAAKjE,MAAM8F,YAAc,kBAAC,EAAD,CAASlF,KAAM,qGAAwB,Q,GAjK3DoG,aAwKVC,cAAW7C,GC5Kb8C,G,MAAQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAA+B,IAAxBC,kBAAwB,SACnD,OACI,oCACI,wBAAIvG,UAAW,SAAUsG,GAErBC,EAAa,uBAAGvG,UAAW,eAAd,4GAAuD,MCJvEwG,EAAa,WACtB,OACI,oCACI,kBAAC,EAAD,CAAOF,MAAO,uEACd,kBAAC,EAAD,QCDNG,E,kDACF,WAAY3G,GAAQ,IAAD,8BACf,cAAMA,IAcV0D,aAAe,SAACrE,GAAW,IACfsE,EAAwCtE,EAAxCsE,SAAUG,EAA8BzE,EAA9ByE,SAAUC,EAAoB1E,EAApB0E,gBAE5B,OAAOC,QACHzC,EAAiBoC,EAAU,EAAG,MAC9BpC,EAAiBuC,EAAU,EAAG,MAC9BC,IArBW,EAyBnBE,qBAAuB,SAACC,GACpB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAC/B,EAAKH,UAAS,SAAC/E,GAAD,MAAY,CACtBsE,SAAUtC,EACVgD,YAAa,EAAKX,aAAL,2BAAuBrE,GAAvB,IAA8BsE,SAAUtC,UA7B1C,EAiCnBoD,qBAAuB,SAACP,GACpB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAEzBR,EAAkB5C,EADN,6BAC+BE,GAEjD,EAAK+C,UAAS,SAAC/E,GAAD,MAAY,CACtByE,SAAUzC,EACV0C,gBAAiBA,EACjBM,YAAa,EAAKX,aAAL,2BACNrE,GADM,IAETyE,SAAUzC,EACV0C,gBAAiBA,UA5CV,EAiDnBW,kBAAoB,WAChB,EAAKN,UAAS,SAAC/E,GAAD,MAAY,CAACsF,iBAAkBtF,EAAMsF,qBAlDpC,EAqDnBC,aAAe,SAACV,GACZA,EAAIW,iBACJ,IAAMjD,EAAW,IAAImD,SAASb,EAAIC,QAC5BZ,EAAW5B,EAAwBC,GAEzCO,EAAIyE,gBAAgBrD,GACf0B,MAAK,SAACC,GACHK,aAAasB,QAAQ,QAArB,gBAAuC3B,EAAK4B,QAC5CvB,aAAasB,QAAQ,QAAS,EAAKxH,MAAMsE,UAEzC,EAAKS,SAAS,CAACe,aAAa,IAE5BC,YAAW,WACP,EAAKpF,MAAM8E,QAAQO,KAAK,OACzB,UAhEX,EAAKC,aAAe,CAChB3B,SAAU,GACVG,SAAU,GACVO,aAAa,EACbM,iBAAiB,EACjBZ,iBAAiB,EACjBoB,aAAa,GAGjB,EAAK9F,MAAQ,EAAKiG,aAZH,E,qDAwEf,OACI,kBAAC,IAAMI,SAAP,KACI,0BAAMxF,UAAW,OACXyF,SAAUrC,KAAKsB,cACjB,yBAAK1E,UAAW,eACZ,2BAAOA,UAAW,cAAeX,KAAM,OAAQqG,KAAM,WAAYpC,GAAI,WAAYqC,UAAQ,EAACC,UAAW,EAAGC,UAAW,IAC5G1E,MAAOiC,KAAKjE,MAAMsE,SAClBqC,SAAU1C,KAAKW,qBACfgC,QAAS,iBAChB,2BAAO/F,UAAW,oCAAqCgG,QAAS,YAAhE,mCAEJ,yBAAKhG,UAAW,iCACZ,2BAAOA,UAAW,cAAe0F,KAAM,WAAYpC,GAAI,WAAYqC,UAAQ,EAACC,UAAW,EAAGC,UAAW,IAC9FxG,KAAM+D,KAAKjE,MAAMsF,gBAAkB,OAAS,WAC5CtD,MAAOiC,KAAKjE,MAAMyE,SAClBkC,SAAU1C,KAAKmB,qBACfwB,QAAS,gCAEhB,2BAAO/F,UAAW,oCAAqCgG,QAAS,YAAhE,wCACA,4BAAQhG,UAAW,0BAA2BX,KAAM,SAC5C4G,QAAS7C,KAAKoB,mBAClB,yBAAKxE,UAAWoD,KAAKjE,MAAMsF,gBAAkB,cAAgB,MAAQxE,MAAO,GAAIC,OAAQ,GAAIC,QAAQ,YAAYC,KAAK,QACjH,0BACIE,EAAE,gEAEN,0BACIA,EAAE,kEAGV,0BAAMN,UAAW,mBAAjB,+JAGR,yBAAKA,UAAW,eACZ,4BAAQA,UAAW,gBAAiBX,KAAM,SAAU6G,UAAW9C,KAAKjE,MAAMgF,aAA1E,oCAEJ,yBAAKnE,UAAW,wCACZ,0BAAMA,UAAW,kBAAjB,wEACA,kBAAC,IAAD,CAAMA,UAAW,aAAcuF,GAAG,YAAlC,kHAIJnC,KAAKjE,MAAM8F,YAAc,kBAAC,EAAD,CAASlF,KAAM,+FAAuB,Q,GAlH1DoG,aAyHVC,cAAWK,GC5HbI,EAAa,WACtB,OACI,oCACI,kBAAC,EAAD,CAAOP,MAAO,6BACd,kBAAC,EAAD,QCCNQ,G,wDACF,WAAYhH,GAAQ,IAAD,8BACf,cAAMA,IA2CV0D,aAAe,SAACrE,GAAW,IACfsE,EAA+DtE,EAA/DsE,SAAUC,EAAqDvE,EAArDuE,WAAYC,EAAyCxE,EAAzCwE,UAAWC,EAA8BzE,EAA9ByE,SAAUC,EAAoB1E,EAApB0E,gBAEnD,OAAOC,QACHzC,EAAiBoC,EAAU,EAAG,MAC9BpC,EAAiBqC,EAAY,EAAG,KAChCrC,EAAiBsC,EAAW,EAAG,MAC/BtC,EAAiBuC,EAAU,EAAG,MAC9BC,IApDW,EAwDnBO,sBAAwB,SAACJ,GACrB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAC/B,EAAKH,UAAS,SAAC/E,GAAD,MAAY,CACtBuE,WAAYvC,EACZgD,YAAa,EAAKX,aAAL,2BAAuBrE,GAAvB,IAA8BuE,WAAYvC,UA5D5C,EAgEnBmD,qBAAuB,SAACN,GACpB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAE/B,EAAKH,UAAS,SAAC/E,GAAD,MAAY,CACtBwE,UAAWxC,EACXgD,YAAa,EAAKX,aAAL,2BACNrE,GADM,IAETwE,UAAWxC,UAvEJ,EA4EnBoD,qBAAuB,SAACP,GACpB,IAAM7C,EAAQ6C,EAAIC,OAAO9C,MAAMkD,OAEzBR,EAAkB5C,EADN,6BAC+BE,GAEjD,EAAK+C,UAAS,SAAC/E,GAAD,MAAY,CACtByE,SAAUzC,EACV0C,gBAAiBA,EACjBM,YAAa,EAAKX,aAAL,2BACNrE,GADM,IAETyE,SAAUzC,EACV0C,gBAAiBA,UAvFV,EA4FnBW,kBAAoB,WAChB,EAAKN,UAAS,SAAC/E,GAAD,MAAY,CAACsF,iBAAkBtF,EAAMsF,qBA7FpC,EAgGnBC,aAAe,SAACV,GACZA,EAAIW,iBACJ,EAAKT,SAAS,CAACe,aAAa,IAC5B,IAAMvD,EAAW,IAAImD,SAASb,EAAIC,QAC5BZ,EAAW5B,EAAwBC,GAEnCa,EAAgB,CAClB,OAAU,mBACV,cAAiB8C,aAAaC,QAAQ,UAG1CrD,EAAI8E,WAAW1D,EAAU,EAAKlE,MAAMmE,GAAIf,GACnCwC,MAAK,SAACC,GACCA,EAAK1B,KACL,EAAKY,SAAS,CAAC8C,eAAe,IAC9B9B,YAAW,WACP,EAAKhB,SAAS,CAACe,aAAa,MAC7B,WAjHA,EAsHnBgC,gBAAkB,WACd,EAAK/C,SAAS,CAAC8C,eAAe,KAvHf,EA0HnBE,gBAAkB,WACd7B,aAAa8B,WAAW,SACxB9B,aAAa8B,WAAW,SACxB,EAAKrH,MAAM8E,QAAQO,KAAK,aA1HxB,EAAKC,aAAe,CAChB1B,WAAY,GACZJ,GAAI,GACJ8D,WAAW,EACXzD,UAAW,GACXF,SAAU,GACVG,SAAU,GACVO,aAAa,EACbM,iBAAiB,EACjBZ,iBAAiB,EACjBoB,aAAa,EACb+B,eAAe,GAGnB,EAAK7H,MAAQ,EAAKiG,aAjBH,E,gEAoBE,IAAD,OACV7C,EAAgB,CAClB8E,cAAehC,aAAaC,QAAQ,UAGxCrD,EAAIqF,YAAY/E,GACXwC,MAAK,SAACnF,GACH,EAAKE,MAAMyH,oBAAoB3H,GAC/B,IAAMD,EPHI,SAAC6H,EAAS9H,GAChC,IAAM+H,EAAQD,EAAQE,WAAU,SAACC,GAAD,OAC5BA,EAAKlE,SAASmE,gBAAkBlI,EAAMkI,iBAG1C,OAAOJ,EAAQC,IAAU,KOFAI,CAAWjI,EAAOyF,aAAaC,QAAQ,UACpD,EAAKxF,MAAMgI,oBAAoBnI,GAE/B,EAAKuE,UAAS,SAAC/E,GACX,OAAOyC,OAAOmG,OAAPnG,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACAzC,GADA,IAEHmE,GAAI3D,EAAK2D,GACT8D,UAAWzH,EAAKyH,UAChB3D,SAAU9D,EAAK8D,SACfC,WAAY/D,EAAK+D,WACjBC,UAAWhE,EAAKgE,qB,+BA2FhC,OACQ,oCACI,yBAAK3D,UAAU,cACX,4BACIkG,UAAW9C,KAAKjE,MAAM6H,cACtBf,QAAS7C,KAAK6D,gBACdjH,UAAU,qCAAqCX,KAAK,UAHxD,0IAKA,4BACI4G,QAAS7C,KAAK8D,gBACdlH,UAAU,sCAAsCX,KAAK,UAFzD,mCAKJ,0BAAMW,UAAW,OACXyF,SAAUrC,KAAKsB,cAGjB,8BACI1E,UAAU,iBACVkG,SAAU9C,KAAKjE,MAAM6H,eAErB,4BAAQhH,UAAU,mBAAlB,iHACA,yBAAKA,UAAW,eACZ,2BAAOA,UAAW,cAAeX,KAAM,OAAQqG,KAAM,WAAYpC,GAAI,WAAYqC,UAAQ,EAACC,UAAW,EAAGC,UAAW,IAC5G1E,MAAOiC,KAAKjE,MAAMsE,SAClByC,UAAU,EACVH,QAAS,iBAEhB,2BAAO/F,UAAW,oCAAqCgG,QAAS,YAAhE,mCAEJ,yBAAKhG,UAAW,eACZ,2BAAOA,UAAW,cAAeX,KAAM,OAAQqG,KAAM,aAAcpC,GAAI,aAAcqC,UAAQ,EAACE,UAAW,GAClG1E,MAAOiC,KAAKjE,MAAMuE,WAClBoC,SAAU1C,KAAKgB,wBACtB,2BAAOpE,UAAW,oCAAqCgG,QAAS,cAAhE,uBAEJ,yBAAKhG,UAAW,eACZ,2BAAOA,UAAW,cAAeX,KAAM,OAAQqG,KAAM,YAAapC,GAAI,YAAaqC,UAAQ,EAACE,UAAW,IAChG1E,MAAOiC,KAAKjE,MAAMwE,UAClBmC,SAAU1C,KAAKkB,uBAEtB,2BAAOtE,UAAW,oCAAqCgG,QAAS,aAAhE,+CAEJ,yBAAKhG,UAAW,eACZ,2BAAOA,UAAW,cAAe0F,KAAM,WAAYpC,GAAI,WAAYsC,UAAW,EAAGC,UAAW,IACrFxG,KAAM+D,KAAKjE,MAAMsF,gBAAkB,OAAS,WAC5CtD,MAAOiC,KAAKjE,MAAMyE,SAClBkC,SAAU1C,KAAKmB,qBACfwB,QAAS,gCAEhB,2BAAO/F,UAAW,oCAAqCgG,QAAS,YAAhE,wCACA,4BAAQhG,UAAW,0BAA2BX,KAAM,SAC5C4G,QAAS7C,KAAKoB,mBAClB,yBAAKxE,UAAWoD,KAAKjE,MAAMsF,gBAAkB,cAAgB,MAAQxE,MAAO,GAAIC,OAAQ,GAAIC,QAAQ,YAAYC,KAAK,QACjH,0BACIE,EAAE,gEAEN,0BACIA,EAAE,kEAGV,0BAAMN,UAAW,mBAAjB,+JAGR,yBAAKA,UAAW,eACZ,4BAAQA,UAAW,gBAAiBX,KAAM,SAAU6G,UAAW9C,KAAKjE,MAAMgF,aAA1E,iIAKRf,KAAKjE,MAAM8F,YAAc,kBAAC,EAAD,CAASlF,KAAM,oIAA8B,Q,GAxMtEoG,cA6NTC,cACX4B,aAfoB,SAAC7I,GAAD,MAAY,CAChCQ,KAAMR,EAAMQ,KACZC,MAAOT,EAAMS,UAGU,SAACqI,GAAD,MAAe,CACtCV,oBAAqB,SAAC3H,GAClBqI,EC/NiC,CAAE5I,KAAM,gBAAiBC,QD+NrCM,KAEzBkI,oBAAqB,SAACnI,GAClBsI,EElOiC,CAAE5I,KAAM,gBAAiBC,QFkOrCK,QAKzBqI,CAA6ClB,IGnOpCoB,EAAgB,WACzB,OACI,oCACI,kBAAC,EAAD,CAAO5B,MAAO,0DAAcC,YAAY,IACxC,kBAAC,EAAD,QCWGH,G,MAAAA,aAfM,SAACtG,GAAW,IACjBqI,EAAarI,EAAMsI,SAAnBD,SACJE,EAAW,gBAMf,MAJkB,aAAbF,GAA0C,aAAbA,IAC9BE,GAAY,0BAIZ,yBAAKrI,UAAWqI,GACXvI,EAAMwI,cCXVC,EAAc,SAACzI,GACxB,OAAKuF,aAAaC,QAAQ,SAInBxF,EAAMwI,SAHF,kBAAC,IAAD,CAAU/C,GAAG,cAMfiD,EAAc,SAAC1I,GACxB,OAAIuF,aAAaC,QAAQ,SACd,kBAAC,IAAD,CAAUC,GAAG,MAGjBzF,EAAMwI,UC6CFG,G,YAlDH,WACR,OACI,kBAAC,IAAD,CAAQC,SAAS,UACb,kBAAC,EAAD,KACI,kBAAC,IAAD,CACIC,KAAK,aACJ,gBAAGC,EAAH,EAAGA,MAAH,OACG,kBAACC,EAAA,EAAD,CACIC,GAAa,MAATF,EACJG,QAAS,IACTC,WAAW,OACXC,eAAa,GAEb,yBAAKjJ,UAAU,QACX,kBAAC,EAAD,KACI,kBAAC,EAAD,YAMpB,kBAAC,IAAD,CACI2I,KAAK,aACJ,gBAAGC,EAAH,EAAGA,MAAH,OACG,kBAACC,EAAA,EAAD,CACIC,GAAa,MAATF,EACJG,QAAS,IACTC,WAAW,OACXC,eAAa,GAEb,yBAAKjJ,UAAU,QACX,kBAAC,EAAD,KACI,kBAAC,EAAD,YAMpB,kBAAC,IAAD,CACIkJ,OAAK,EACLP,KAAK,KACL,kBAAC,EAAD,KACI,kBAAC,EAAD,Y,oCCzCJ7E,QACW,cAA7BqF,OAAOf,SAASgB,UAEe,UAA7BD,OAAOf,SAASgB,UAEhBD,OAAOf,SAASgB,SAASR,MACvB,2DCDN,IAAMS,EAAqBC,YAAgBC,KACrCC,EAAmBC,YAAQJ,GAC3BK,EAAQC,YAAYC,OAAaC,EAAWL,GAElDM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGNO,SAASC,eAAe,SDwGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtF,MAAK,SAAAuF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c4f936b6.chunk.js","sourcesContent":["const reducerLogin = (state = \"\", action ) => {\r\n    switch (action.type) {\r\n        case 'GET_LOGIN':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerLogin;\r\n","const reducerUser = (state = {}, action ) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_INFO':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerUser;\r\n","const reducerUsers = (state = [], action ) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_USERS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerUsers;\r\n","import { combineReducers } from 'redux';\r\nimport login from \"./login\";\r\nimport user from \"./user\";\r\nimport users from \"./users\";\r\n\r\nexport default combineReducers({\r\n    login,\r\n    user,\r\n    users\r\n})\r\n","import React from \"react\";\nimport './success.scss';\n\nexport const Success = (props) => {\n    const { text } = props;\n    return (\n        <div className={\"success\"}>\n            <svg\n                className={\"success__svg\"}\n                width={212}\n                height={212}\n                viewBox=\"0 0 212 212\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    className={\"success__path\"}\n                    d=\"M106 13.25C54.7805 13.25 13.25 54.7805 13.25 106C13.25 157.22 54.7805 198.75 106 198.75C157.22 198.75 198.75 157.22 198.75 106C198.75 54.7805 157.22 13.25 106 13.25ZM146.061 75.7113L102.46 136.164C101.85 137.015 101.047 137.708 100.116 138.186C99.1856 138.664 98.1543 138.914 97.108 138.914C96.0617 138.914 95.0304 138.664 94.0997 138.186C93.169 137.708 92.3656 137.015 91.7563 136.164L65.9395 100.389C65.1527 99.2922 65.9395 97.7602 67.2852 97.7602H76.9949C79.1066 97.7602 81.1148 98.7746 82.357 100.514L97.0977 120.968L129.643 75.8355C130.885 74.1172 132.873 73.082 135.005 73.082H144.715C146.061 73.082 146.847 74.6141 146.061 75.7113Z\"\n                    fill=\"black\"\n                    stroke=\"black\"\n                    orig-stroke=\"black\"\n                    strokeWidth={1}\n                    orig-stroke-width={1}\n                    animation-delay-opacity={0}\n                    animation-delay-stroke={500}\n                    animation-delay-fill={1500}\n                    animation-duration-opacity={500}\n                    animation-duration-stroke={1000}\n                    animation-duration-fill={500}\n                />\n            </svg>\n            <p className={\"success__text\"}>Вы {text}</p>\n        </div>\n    )\n}\n","/**\n * Валидация значения в зависимости от Regex\n * @param { RegExp } regex\n * @param { String } value\n * @returns {Boolean}\n */\nexport const validateRegex = (regex, value) => {\n    return regex.test(value);\n}\n/**\n * Проверяет длину строки в диапазоне min и max\n * @param {String} value\n * @param {Integer} min - мин. длина\n * @param {Integer} max - макс. длина\n * @returns {boolean}\n */\nexport const checkValueLength = (value, min, max) => {\n    const length = value.length;\n    return (length >= min) && (length <= max);\n}\n/**\n * Конвертирует данные формы собранные с помощью new FormData в JSON\n * @param {FormData} formData\n * @returns {string}\n */\nexport const converterFormDataToJson = (formData) => {\n    const objectData = Object.fromEntries(formData);\n    return JSON.stringify(objectData);\n}\n/**\n * Поиск пользователя в массиве и возврат его.\n * @param { Array } storage\n * @param { String } login\n * @returns { Object | Null} - user\n */\nexport const searchUser = (storage, login) => {\n    const index = storage.findIndex((item) => (\n        item.username.toLowerCase() === login.toLowerCase())\n    );\n\n    return storage[index] || null;\n}\n","const Method = {\r\n    GET: `GET`,\r\n    POST: `POST`,\r\n    PUT: `PUT`,\r\n    PATCH: `PATCH`,\r\n    DELETE: `DELETE`\r\n};\r\n\r\nclass ApiHeroku {\r\n    constructor() {\r\n        this._baseUrl = \"http://emphasoft-test-assignment.herokuapp.com\";\r\n    }\r\n\r\n    _fetchRequest = async ({\r\n        url,\r\n        method = Method.GET,\r\n        body = null,\r\n        headersAppend = null\r\n        }) => {\r\n\r\n        const headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n\r\n        if (headersAppend) {\r\n            for (const [key, value] of Object.entries(headersAppend)) {\r\n                headers.append(`${key}`, `${value}`);\r\n            }\r\n        }\r\n\r\n        const response = await fetch(`${this._baseUrl}/${url}`, { method, body, headers });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            alert(\"Ошибка: \" + response.status);\r\n        }\r\n    }\r\n\r\n    getTokenAndAuth(jsonData) {\r\n        return this._fetchRequest({ url: \"api-token-auth/\", method: Method.POST, body: jsonData});\r\n    }\r\n\r\n    getAllUsers(headersAppend) {\r\n        return this._fetchRequest({ url: \"api/v1/users/\", headersAppend });\r\n    }\r\n\r\n    createUser(jsonData, headersAppend) {\r\n        return this._fetchRequest({ url: \"api/v1/users/\", method: Method.POST, body: jsonData, headersAppend });\r\n    }\r\n\r\n    updateUser(jsonData, id, headersAppend) {\r\n        return this._fetchRequest({ url: `api/v1/users/${id}/`, method: Method.PATCH, body: jsonData, headersAppend });\r\n    }\r\n}\r\n\r\nexport const api = new ApiHeroku();\r\n","import React, { Component } from 'react';\nimport {Link, Redirect, withRouter} from \"react-router-dom\";\nimport './form.scss';\nimport { Success } from \"../success/success\";\nimport {validateRegex, checkValueLength, converterFormDataToJson} from \"../../helpers/helpers\";\nimport { api } from \"../../api/api-heroku\";\n\nclass FormSingUp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.initialState = {\n            username: '',\n            first_name: '',\n            last_name: '',\n            password: '',\n            isValidForm: false,\n            isTypeInputText: false,\n            isValidPassword: false,\n            showSuccess: false\n        }\n\n        this.state = this.initialState;\n    }\n\n    validateForm = (state) => {\n        const { username, first_name, last_name, password, isValidPassword } = state;\n\n        return Boolean(\n            checkValueLength(username, 1, 150) &&\n            checkValueLength(first_name, 1, 30) &&\n            checkValueLength(last_name, 1, 150) &&\n            checkValueLength(password, 1, 128) &&\n            isValidPassword\n        );\n    };\n\n    handleChangeUsername = (evt) => {\n        const value = evt.target.value;\n        this.setState((state) => ({\n            username: value,\n            isValidForm: this.validateForm({ ...state, username: value })\n        }));\n    }\n\n    handleChangeFirstName = (evt) => {\n        const value = evt.target.value.trim();\n        this.setState((state) => ({\n            first_name: value,\n            isValidForm: this.validateForm({ ...state, first_name: value })\n        }));\n    }\n\n    handleChangeLastName = (evt) => {\n        const value = evt.target.value.trim();\n\n        this.setState((state) => ({\n            last_name: value,\n            isValidForm: this.validateForm({\n                ...state,\n                last_name: value,\n                })\n        }));\n    }\n\n    handleChangePassword = (evt) =>{\n        const value = evt.target.value.trim();\n        const pswdRegex = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\n        const isValidPassword = validateRegex(pswdRegex, value);\n\n        this.setState((state) => ({\n            password: value,\n            isValidPassword: isValidPassword,\n            isValidForm: this.validateForm({\n                ...state,\n                password: value,\n                isValidPassword: isValidPassword\n            })\n        }));\n    }\n\n    handleClickToggle = () =>{\n        this.setState((state) => ({isTypeInputText: !state.isTypeInputText}));\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        const { history } = this.props;\n\n        const formData = new FormData(evt.target);\n        formData.append(\"is_active\", \"true\")\n        const jsonData = converterFormDataToJson(formData);\n\n        const headersAppend = {\n            \"accept\": \"application/json\",\n            \"Authorization\": \"Token 781bd9f1de084f4daa7ba2aa8a71a2eab855354e\"\n        }\n\n        api.createUser(jsonData, headersAppend)\n            .then((data) => {\n                if (data.id) {\n                    this.setState({showSuccess: true});\n                    setTimeout(() => {\n                        history.push(\"/sing-in\")\n                    }, 3500)\n                }\n            })\n    }\n\n    render() {\n        if (localStorage.getItem('token')) {\n            return <Redirect to=\"/\" />\n        }\n\n        return (\n            <React.Fragment>\n                <form className={\"form\"}\n                      onSubmit={this.handleSubmit}>\n                    <div className={\"form__field\"}>\n                        <input className={\"form__input\"} type={\"text\"} name={\"username\"} id={\"username\"} required minLength={1} maxLength={150}\n                               value={this.state.username}\n                               onChange={this.handleChangeUsername}\n                               pattern={\"^[\\\\w.@+-]+$\"}/>\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"username\"}>Логин</label>\n                    </div>\n                    <div className={\"form__field\"}>\n                        <input className={\"form__input\"} type={\"text\"} name={\"first_name\"} id={\"first_name\"} required maxLength={30}\n                               value={this.state.first_name}\n                               onChange={this.handleChangeFirstName}/>\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"first_name\"}>Имя</label>\n                    </div>\n                    <div className={\"form__field\"}>\n                        <input className={\"form__input\"} type={\"text\"} name={\"last_name\"} id={\"last_name\"} required maxLength={150}\n                               value={this.state.last_name}\n                               onChange={this.handleChangeLastName}\n                        />\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"last_name\"}>Фамилия</label>\n                    </div>\n                    <div className={\"form__field\"}>\n                        <input className={\"form__input\"} name={\"password\"} id={\"password\"} required minLength={8} maxLength={128}\n                               type={this.state.isTypeInputText ? \"text\" : \"password\" }\n                               value={this.state.password}\n                               onChange={this.handleChangePassword}\n                               pattern={\"^(?=.*[A-Z])(?=.*\\\\d).{8,}$\"}\n                            />\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"password\"}>Пароль</label>\n                        <button className={\"form__switch-input-type\"} type={\"button\"}\n                                onClick={this.handleClickToggle}>\n                            <svg className={this.state.isTypeInputText ? \"eye eye--on\" : \"eye\" } width={16} height={12} viewBox=\"0 0 19 14\" fill=\"none\">\n                                <path\n                                    d=\"M12.113 7A2.572 2.572 0 116.97 7a2.572 2.572 0 015.143 0v0z\"\n                                />\n                                <path\n                                    d=\"M1.363 7a8.575 8.575 0 0116.358 0A8.575 8.575 0 011.363 7v0z\"\n                                />\n                            </svg>\n                            <span className={\"visually-hidden\"}>Посмотреть или скрыть пароль</span>\n                        </button>\n                    </div>\n                    <div className={\"form__field\"}>\n                        <button className={\"btn form__btn\"} type={\"submit\"} disabled={!this.state.isValidForm}>Зарегистрироваться </button>\n                    </div>\n                    <div className={\"form__field form__field--text-center\"}>\n                        <span className={\"form__question\"}>Есть аккаунт?</span>\n                        <Link className={\"form__link\"} to=\"/sing-in\">Войти</Link>\n                    </div>\n                </form>\n                {\n                    this.state.showSuccess ? <Success text={\"зарегистрированы\"}/> : \"\"\n                }\n            </React.Fragment>\n            )\n    }\n}\n\nexport default withRouter(FormSingUp);\n","import React from \"react\";\nimport './title.scss';\n\nexport const Title = ({ title, isShowDesc = true }) => {\n    return (\n        <>\n            <h1 className={\"title\"}>{title}</h1>\n            {\n                isShowDesc ? <p className={\"title__desc\"}>Введите свои данные</p> : \"\"\n            }\n        </>\n    )\n}\n","import React from \"react\";\nimport FormSingUp from '../components/forms/sing-up';\nimport  { Title } from '../components/title/title';\n\nexport const PageSingUp = () => {\n    return (\n        <>\n            <Title title={\"Регистрация\"}/>\n            <FormSingUp/>\n        </>\n    )\n}\n","import React, { Component } from 'react';\nimport {Link, withRouter } from \"react-router-dom\";\nimport './form.scss';\nimport { Success } from \"../success/success\";\nimport { validateRegex, checkValueLength, converterFormDataToJson } from \"../../helpers/helpers\";\nimport { api } from \"../../api/api-heroku\";\n\nclass FormSingIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.initialState = {\n            username: '',\n            password: '',\n            isValidForm: false,\n            isTypeInputText: false,\n            isValidPassword: false,\n            showSuccess: false\n        }\n\n        this.state = this.initialState;\n    }\n\n    validateForm = (state) => {\n        const { username, password, isValidPassword } = state;\n\n        return Boolean(\n            checkValueLength(username, 1, 150) &&\n            checkValueLength(password, 8, 128) &&\n            isValidPassword\n        );\n    };\n\n    handleChangeUsername = (evt) => {\n        const value = evt.target.value.trim();\n        this.setState((state) => ({\n            username: value,\n            isValidForm: this.validateForm({ ...state, username: value })\n        }));\n    }\n\n    handleChangePassword = (evt) =>{\n        const value = evt.target.value.trim();\n        const pswdRegex = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\n        const isValidPassword = validateRegex(pswdRegex, value);\n\n        this.setState((state) => ({\n            password: value,\n            isValidPassword: isValidPassword,\n            isValidForm: this.validateForm({\n                ...state,\n                password: value,\n                isValidPassword: isValidPassword\n            })\n        }));\n    }\n\n    handleClickToggle = () =>{\n        this.setState((state) => ({isTypeInputText: !state.isTypeInputText}));\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        const formData = new FormData(evt.target);\n        const jsonData = converterFormDataToJson(formData);\n\n        api.getTokenAndAuth(jsonData)\n            .then((data) => {\n                localStorage.setItem('token', `Token ${data.token}`);\n                localStorage.setItem('login', this.state.username);\n\n                this.setState({showSuccess: true});\n\n                setTimeout(() => {\n                    this.props.history.push(\"/\");\n                }, 3500)\n            })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <form className={\"form\"}\n                      onSubmit={this.handleSubmit}>\n                    <div className={\"form__field\"}>\n                        <input className={\"form__input\"} type={\"text\"} name={\"username\"} id={\"username\"} required minLength={1} maxLength={150}\n                               value={this.state.username}\n                               onChange={this.handleChangeUsername}\n                               pattern={\"^[\\\\w.@+-]+$\"}/>\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"username\"}>Логин</label>\n                    </div>\n                    <div className={\"form__field form__field--mb40\"}>\n                        <input className={\"form__input\"} name={\"password\"} id={\"password\"} required minLength={8} maxLength={128}\n                               type={this.state.isTypeInputText ? \"text\" : \"password\" }\n                               value={this.state.password}\n                               onChange={this.handleChangePassword}\n                               pattern={\"^(?=.*[A-Z])(?=.*\\\\d).{8,}$\"}\n                        />\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"password\"}>Пароль</label>\n                        <button className={\"form__switch-input-type\"} type={\"button\"}\n                                onClick={this.handleClickToggle}>\n                            <svg className={this.state.isTypeInputText ? \"eye eye--on\" : \"eye\" } width={16} height={12} viewBox=\"0 0 19 14\" fill=\"none\">\n                                <path\n                                    d=\"M12.113 7A2.572 2.572 0 116.97 7a2.572 2.572 0 015.143 0v0z\"\n                                />\n                                <path\n                                    d=\"M1.363 7a8.575 8.575 0 0116.358 0A8.575 8.575 0 011.363 7v0z\"\n                                />\n                            </svg>\n                            <span className={\"visually-hidden\"}>Посмотреть или скрыть пароль</span>\n                        </button>\n                    </div>\n                    <div className={\"form__field\"}>\n                        <button className={\"btn form__btn\"} type={\"submit\"} disabled={!this.state.isValidForm}>Войти </button>\n                    </div>\n                    <div className={\"form__field form__field--text-center\"}>\n                        <span className={\"form__question\"}>Нет аккаунта?</span>\n                        <Link className={\"form__link\"} to=\"/sing-up\">Зарегистрироваться</Link>\n                    </div>\n                </form>\n                {\n                    this.state.showSuccess ? <Success text={\"авторизированны\"}/> : \"\"\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(FormSingIn);\n","import React from \"react\";\nimport FormSingIn from '../components/forms/sing-in';\nimport  { Title } from '../components/title/title';\n\nexport const PageSingIn = () => {\n    return (\n        <>\n            <Title title={\"Вход\"}/>\n            <FormSingIn/>\n        </>\n    )\n}\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { api } from \"../../api/api-heroku\";\r\nimport { getAllUsers, getUserInfo } from \"../../actions\";\r\nimport {checkValueLength, converterFormDataToJson, searchUser, validateRegex} from \"../../helpers/helpers\";\r\nimport {Success} from \"../success/success\";\r\nimport \"./my-profile.scss\";\r\n\r\nclass MyProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            first_name: '',\r\n            id: '',\r\n            is_active: true,\r\n            last_name: '',\r\n            username: '',\r\n            password: '',\r\n            isValidForm: false,\r\n            isTypeInputText: false,\r\n            isValidPassword: false,\r\n            showSuccess: false,\r\n            isDisableForm: true\r\n        }\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const headersAppend = {\r\n            Authorization: localStorage.getItem('token')\r\n        }\r\n\r\n        api.getAllUsers(headersAppend)\r\n            .then((users) => {\r\n                this.props.getAllUsersDispatch(users);\r\n                const user = searchUser(users, localStorage.getItem('login'));\r\n                this.props.getUserInfoDispatch(user);\r\n\r\n                this.setState((state) => {\r\n                    return Object.assign({\r\n                        ...state,\r\n                        id: user.id,\r\n                        is_active: user.is_active,\r\n                        username: user.username,\r\n                        first_name: user.first_name,\r\n                        last_name: user.last_name\r\n                    })\r\n                })\r\n            })\r\n    }\r\n\r\n    validateForm = (state) => {\r\n        const { username, first_name, last_name, password, isValidPassword } = state;\r\n\r\n        return Boolean(\r\n            checkValueLength(username, 1, 150) &&\r\n            checkValueLength(first_name, 1, 30) &&\r\n            checkValueLength(last_name, 1, 150) &&\r\n            checkValueLength(password, 1, 128) &&\r\n            isValidPassword\r\n        );\r\n    };\r\n\r\n    handleChangeFirstName = (evt) => {\r\n        const value = evt.target.value.trim();\r\n        this.setState((state) => ({\r\n            first_name: value,\r\n            isValidForm: this.validateForm({ ...state, first_name: value })\r\n        }));\r\n    }\r\n\r\n    handleChangeLastName = (evt) => {\r\n        const value = evt.target.value.trim();\r\n\r\n        this.setState((state) => ({\r\n            last_name: value,\r\n            isValidForm: this.validateForm({\r\n                ...state,\r\n                last_name: value,\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleChangePassword = (evt) =>{\r\n        const value = evt.target.value.trim();\r\n        const pswdRegex = /^(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n        const isValidPassword = validateRegex(pswdRegex, value);\r\n\r\n        this.setState((state) => ({\r\n            password: value,\r\n            isValidPassword: isValidPassword,\r\n            isValidForm: this.validateForm({\r\n                ...state,\r\n                password: value,\r\n                isValidPassword: isValidPassword\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleClickToggle = () =>{\r\n        this.setState((state) => ({isTypeInputText: !state.isTypeInputText}));\r\n    }\r\n\r\n    handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        this.setState({showSuccess: true})\r\n        const formData = new FormData(evt.target);\r\n        const jsonData = converterFormDataToJson(formData);\r\n\r\n        const headersAppend = {\r\n            \"accept\": \"application/json\",\r\n            \"Authorization\": localStorage.getItem(\"token\")\r\n        }\r\n\r\n        api.updateUser(jsonData, this.state.id, headersAppend)\r\n            .then((data) => {\r\n                if (data.id) {\r\n                    this.setState({isDisableForm: true});\r\n                    setTimeout(() => {\r\n                        this.setState({showSuccess: false});\r\n                    }, 3500)\r\n                }\r\n            })\r\n    }\r\n\r\n    handleClickEdit = () => {\r\n        this.setState({isDisableForm: false})\r\n    }\r\n\r\n    handleClickExit = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('login');\r\n        this.props.history.push(\"/sing-in\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <>\r\n                    <div className=\"my-profile\">\r\n                        <button\r\n                            disabled={!this.state.isDisableForm}\r\n                            onClick={this.handleClickEdit}\r\n                            className=\"btn btn--edit my-profile__btn-left\" type=\"button\"\r\n                        >Редактировать мои данные</button>\r\n                        <button\r\n                            onClick={this.handleClickExit}\r\n                            className=\"btn btn--exit my-profile__btn-right\" type=\"button\"\r\n                        >Выйти</button>\r\n                    </div>\r\n                    <form className={\"form\"}\r\n                          onSubmit={this.handleSubmit}\r\n\r\n                        >\r\n                        <fieldset\r\n                            className=\"form__fieldset\"\r\n                            disabled={this.state.isDisableForm}\r\n                            >\r\n                            <legend className=\"visually-hidden\">Данные пользователя</legend>\r\n                            <div className={\"form__field\"}>\r\n                                <input className={\"form__input\"} type={\"text\"} name={\"username\"} id={\"username\"} required minLength={1} maxLength={150}\r\n                                       value={this.state.username}\r\n                                       disabled={true}\r\n                                       pattern={\"^[\\\\w.@+-]+$\"}\r\n                                        />\r\n                                <label className={\"form__label form__label--absolute\"} htmlFor={\"username\"}>Логин</label>\r\n                            </div>\r\n                            <div className={\"form__field\"}>\r\n                                <input className={\"form__input\"} type={\"text\"} name={\"first_name\"} id={\"first_name\"} required maxLength={30}\r\n                                       value={this.state.first_name}\r\n                                       onChange={this.handleChangeFirstName}/>\r\n                                <label className={\"form__label form__label--absolute\"} htmlFor={\"first_name\"}>Имя</label>\r\n                            </div>\r\n                            <div className={\"form__field\"}>\r\n                                <input className={\"form__input\"} type={\"text\"} name={\"last_name\"} id={\"last_name\"} required maxLength={150}\r\n                                       value={this.state.last_name}\r\n                                       onChange={this.handleChangeLastName}\r\n                                />\r\n                                <label className={\"form__label form__label--absolute\"} htmlFor={\"last_name\"}>Фамилия</label>\r\n                            </div>\r\n                            <div className={\"form__field\"}>\r\n                                <input className={\"form__input\"} name={\"password\"} id={\"password\"} minLength={8} maxLength={128}\r\n                                       type={this.state.isTypeInputText ? \"text\" : \"password\" }\r\n                                       value={this.state.password}\r\n                                       onChange={this.handleChangePassword}\r\n                                       pattern={\"^(?=.*[A-Z])(?=.*\\\\d).{8,}$\"}\r\n                                />\r\n                                <label className={\"form__label form__label--absolute\"} htmlFor={\"password\"}>Пароль</label>\r\n                                <button className={\"form__switch-input-type\"} type={\"button\"}\r\n                                        onClick={this.handleClickToggle}>\r\n                                    <svg className={this.state.isTypeInputText ? \"eye eye--on\" : \"eye\" } width={16} height={12} viewBox=\"0 0 19 14\" fill=\"none\">\r\n                                        <path\r\n                                            d=\"M12.113 7A2.572 2.572 0 116.97 7a2.572 2.572 0 015.143 0v0z\"\r\n                                        />\r\n                                        <path\r\n                                            d=\"M1.363 7a8.575 8.575 0 0116.358 0A8.575 8.575 0 011.363 7v0z\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span className={\"visually-hidden\"}>Посмотреть или скрыть пароль</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className={\"form__field\"}>\r\n                                <button className={\"btn form__btn\"} type={\"submit\"} disabled={!this.state.isValidForm}>Сохранить новые данные</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </form>\r\n                    {\r\n                        this.state.showSuccess ? <Success text={\"отредактировали данные\"}/> : \"\"\r\n                    }\r\n                </>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    users: state.users\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getAllUsersDispatch: (users) => {\r\n        dispatch(getAllUsers(users));\r\n    },\r\n    getUserInfoDispatch: (user) => {\r\n        dispatch(getUserInfo(user));\r\n    }\r\n})\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(MyProfile)\r\n)\r\n","export const getAllUsers = (payload) => ({ type: 'GET_ALL_USERS', payload });\r\n","export const getUserInfo = (payload) => ({ type: 'GET_USER_INFO', payload });\r\n","import React from \"react\";\r\nimport MyProfile from \"../components/my-profile/my-profile\";\r\nimport {Title} from \"../components/title/title\";\r\n\r\nexport const PageMyProfile = () => {\r\n    return (\r\n        <>\r\n            <Title title={\"Мои данные\"} isShowDesc={false} />\r\n            <MyProfile/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport './app-container.scss';\r\n\r\nconst AppContainer = (props) => {\r\n        const { pathname } = props.location;\r\n        let classApp = \"app-container\";\r\n\r\n        if ((pathname === \"/sing-in\") || (pathname === \"/sing-up\")) {\r\n            classApp += ' app-container--center';\r\n        }\r\n\r\n        return (\r\n            <div className={classApp}>\r\n                {props.children}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(AppContainer);\r\n","import { Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const PrivatePage = (props) => {\r\n    if (!localStorage.getItem('token')){\r\n        return <Redirect to=\"/sing-in\" />\r\n    }\r\n\r\n    return props.children;\r\n}\r\n\r\nexport const ProtectPage = (props) => {\r\n    if (localStorage.getItem('token')){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return props.children;\r\n}\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport { CSSTransition } from 'react-transition-group';\nimport { PageSingUp } from './pages/sing-up';\nimport { PageSingIn } from './pages/sing-in';\nimport { PageMyProfile } from \"./pages/my-profile\";\nimport AppContainer from \"./components/app-container/app-container\";\nimport { PrivatePage, ProtectPage } from \"./shields/shields\";\nimport \"normalize.css\";\nimport './App.scss';\n\nconst App = () => {\n    return (\n        <Router basename=\"/e-s-r\" >\n            <AppContainer>\n                <Route\n                    path=\"/sing-in\">\n                    {({ match }) => (\n                        <CSSTransition\n                            in={match != null}\n                            timeout={300}\n                            classNames=\"page\"\n                            unmountOnExit\n                        >\n                            <div className=\"page\">\n                                <ProtectPage>\n                                    <PageSingIn/>\n                                </ProtectPage>\n                            </div>\n                        </CSSTransition>\n                    )}\n                </Route>\n                <Route\n                    path=\"/sing-up\">\n                    {({ match }) => (\n                        <CSSTransition\n                            in={match != null}\n                            timeout={300}\n                            classNames=\"page\"\n                            unmountOnExit\n                        >\n                            <div className=\"page\">\n                                <ProtectPage>\n                                    <PageSingUp/>\n                                </ProtectPage>\n                            </div>\n                        </CSSTransition>\n                    )}\n                </Route>\n                <Route\n                    exact\n                    path=\"/\">\n                    <PrivatePage>\n                        <PageMyProfile/>\n                    </PrivatePage>\n                </Route>\n            </AppContainer>\n        </Router>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nimport App from './App';\n\nimport './scss/fonts.scss';\nimport './scss/visually-hidden.scss';\nimport './index.scss';\nimport './scss/btn.scss';\nimport './scss/eye.scss';\nimport './scss/page.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst middlewareEnhancer = applyMiddleware(thunkMiddleware);\nconst composedEnhancer = compose(middlewareEnhancer);\nconst store = createStore(rootReducer, undefined, composedEnhancer);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}